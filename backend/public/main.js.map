{"version":3,"sources":["./src/app/cmps/login/login.component.ts","./src/app/cmps/login/login.component.html","ws (ignored)","./src/app/services/util.service.ts","./src/app/cmps/signup/signup.component.ts","./src/app/cmps/signup/signup.component.html","./src/app/cmps/min/profile-img/profile-img.component.ts","./src/app/cmps/min/profile-img/profile-img.component.html","./src/app/services/socket.service.ts","./src/app/cmps/chat-list/chat-list.component.html","./src/app/cmps/chat-list/chat-list.component.ts","./src/environments/environment.ts","./src/app/cmps/user-preview/user-preview.component.ts","./src/app/cmps/user-preview/user-preview.component.html","./src/app/cmps/header/header.component.ts","./src/app/cmps/header/header.component.html","./src/app/cmps/notification/notification.component.ts","./src/app/cmps/notification/notification.component.html","./src/app/cmps/chat-preview/chat-preview.component.ts","./src/app/cmps/chat-preview/chat-preview.component.html","./src/app/cmps/min/circle-button/circle-button.component.ts","./src/app/cmps/min/circle-button/circle-button.component.html","./src/app/cmps/participation-preview/participation-preview.component.ts","./src/app/cmps/participation-preview/participation-preview.component.html","./src/app/cmps/user-list/user-list.component.ts","./src/app/cmps/user-list/user-list.component.html","./src/app/gurads/auth.guard.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pages/auth/auth.component.html","./src/app/pages/auth/auth.component.ts","./src/app/pages/chat/chat.component.ts","./src/app/pages/chat/chat.component.html","./src/app/app.module.ts","./src/app/pages/chat-details/chat-details.component.html","./src/app/pages/chat-details/chat-details.component.ts","./src/app/cmps/send-msg-bar/send-msg-bar.component.html","./src/app/cmps/send-msg-bar/send-msg-bar.component.ts","./src/app/pages/chat-add/chat-add.component.html","./src/app/pages/chat-add/chat-add.component.ts","./src/app/cmps/min/loading/loading.component.ts","./src/app/cmps/min/loading/loading.component.html","./src/app/services/user.service.ts","./src/app/services/chat.service.ts","./src/app/app-routing.module.ts","./src/app/cmps/msg/msg.component.ts","./src/app/cmps/msg/msg.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAA+E;;;;;;;;;;;;IC0BvE,oEAAoC;IAAA,gEAAK;IAAA,4DAAI;;;IAE3C,qEAAmB;;ADnBtB,MAAM,cAAc;IAGzB,YAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QADpE,qBAAgB,GAAyB,IAAI,0DAAY,EAAE,CAAC;QAE5D,aAAQ,GAAQ,EAAE,CAAC;QACnB,aAAQ,GAAQ,EAAE,CAAC;QACnB,cAAS,GAAY,KAAK,CAAC;IAH4C,CAAC;IAKlE,QAAQ;;YACZ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI;gBACF,MAAM,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC3D,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;aAChC;YAAC,OAAO,GAAG,EAAE;gBACZ,EAAE;aACH;oBAAS;gBACR,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;QACH,CAAC;KAAA;IAED,cAAc;QACZ,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACvC,CAAC;IAEK,OAAO;;YACX,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YACxB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YACxB,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC;KAAA;IAED,QAAQ,KAAU,CAAC;;4EA9BR,cAAc;8FAAd,cAAc;QCT3B,8EAAwB;QACtB,0EAAgD;QAAtB,sIAAU,cAAU,IAAC;QAC7C,yEAAyC;QACvC,oEAAuD;QACzD,4DAAM;QACN,oFAA2C;QACzC,4EAAW;QAAA,mEAAQ;QAAA,4DAAY;QAC/B,2EAKE;QAFA,oLAAsB;QAHxB,4DAKE;QACJ,4DAAiB;QACjB,oFAA2C;QACzC,4EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,4EAME;QAFA,qLAAsB;QAJxB,4DAME;QACJ,4DAAiB;QACjB,0EAA8B;QAC5B,6EAAqE;QACnE,wGAA6C;QAC7C,yMAEc;QAChB,4DAAS;QACT,8EAMC;QADC,uIAAS,aAAS,IAAC;QAEnB,mEACF;QAAA,4DAAS;QACX,4DAAM;QACN,2EAA8B;QAC5B,qEAAG;QAAA,iFAAqB;QAAA,yEAA8B;QAA3B,kIAAS,oBAAgB,IAAC;QAAC,kEAAM;QAAA,4DAAI;QAAA,4DAAI;QACtE,4DAAM;QACR,4DAAO;QACT,4DAAW;;;QAnCH,0DAAsB;QAAtB,iFAAsB;QAUtB,0DAAsB;QAAtB,iFAAsB;QAMlB,0DAAkB;QAAlB,gFAAkB;;;;;;;;;;;;;;;;;;;;;;;;;AC1B9B,e;;;;;;;;;;;;;;;;ACKO,MAAM,WAAW;IACtB,gBAAe,CAAC;IAET,MAAM,CAAC,MAAM,GAAG,CAAC;QACtB,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,IAAI,QAAQ,GACV,gEAAgE,CAAC;QAEnE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE;YAC7B,IAAI,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;QAEvE,OAAO,IAAI,CAAC;IACd,CAAC;;sEAZU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHoD;;;;;;;;;;;;IC8ChE,oEAAoC;IAAA,iEAAM;IAAA,4DAAI;;;IAE5C,qEAAmB;;ADvCtB,MAAM,eAAe;IAG1B,YAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QADpE,qBAAgB,GAAyB,IAAI,0DAAY,EAAE,CAAC;QAG5D,aAAQ,GAAQ,EAAE,CAAC;QACnB,aAAQ,GAAQ,EAAE,CAAC;QACnB,aAAQ,GAAQ,aAAa,CAAC;QAC9B,SAAI,GAAQ,sBAAsB,CAAC;QACnC,cAAS,GAAY,KAAK,CAAC;IAN4C,CAAC;IAQlE,QAAQ;;YACZ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;YACpD,IAAI;gBACF,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;gBACtE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;aAChC;YAAC,OAAO,GAAG,EAAE;gBACZ,EAAE;aACH;oBAAS;gBACR,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;QACH,CAAC;KAAA;IAED,cAAc;QACZ,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACtC,CAAC;IAED,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;IACxC,CAAC;;8EA9BU,eAAe;+FAAf,eAAe;QCT5B,8EAAyB;QACvB,0EAAgD;QAAtB,uIAAU,cAAU,IAAC;QAC7C,yEAAyC;QACvC,oEAAuD;QACzD,4DAAM;QACN,oFAA2C;QACzC,4EAAW;QAAA,mEAAQ;QAAA,4DAAY;QAC/B,2EAKE;QAFA,qLAAsB;QAHxB,4DAKE;QACJ,4DAAiB;QACjB,oFAA2C;QACzC,4EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,4EAME;QAFA,sLAAsB;QAJxB,4DAME;QACJ,4DAAiB;QACjB,qFAA2C;QACzC,6EAAW;QAAA,qEAAS;QAAA,4DAAY;QAChC,4EAME;QAFA,sLAAsB;QAJxB,4DAME;QACJ,4DAAiB;QACjB,qFAA2C;QACzC,6EAAW;QAAA,gEAAI;QAAA,4DAAY;QAC3B,4EAME;QAFA,kLAAkB;QAJpB,4DAME;QACJ,4DAAiB;QACjB,0EAA8B;QAC5B,8EAAgE;QAC9D,0GAA8C;QAC9C,0MAEc;QAChB,4DAAS;QACX,4DAAM;QACN,2EAA8B;QAC5B,qEAAG;QAAA,qFAAyB;QAAA,yEAA8B;QAA3B,mIAAS,oBAAgB,IAAC;QAAC,iEAAK;QAAA,4DAAI;QAAA,4DAAI;QACzE,4DAAM;QACR,4DAAO;QACT,4DAAW;;;QA9CH,0DAAsB;QAAtB,iFAAsB;QAUtB,0DAAsB;QAAtB,iFAAsB;QAUtB,0DAAsB;QAAtB,iFAAsB;QAUtB,0DAAkB;QAAlB,6EAAkB;QAMd,0DAAkB;QAAlB,gFAAkB;;;;;;;;;;;;;;;;;;ACvCvB,MAAM,mBAAmB;IAG9B,gBAAe,CAAC;IAEhB,QAAQ,KAAU,CAAC;;sFALR,mBAAmB;mGAAnB,mBAAmB;QCPhC,yEAAuC;QACrC,oEAAsE;QACxE,4DAAM;;QADC,0DAA8D;QAA9D,gMAA8D;;;;;;;;;;;;;;ACArE;AAAA;AAAA;AAAA;AAAA;AAAuC;;AAKhC,MAAM,aAAa;IACxB;QAGA,MAAM;QACN,gCAAgC;QAChC,OAAO;QACP,YAAO,GAAG,EAAE,CAAC;QALX,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;IACzC,CAAC;IAMD,KAAK;QACH,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,6CAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC/B,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IACD,EAAE,CAAC,SAAiB,EAAE,EAAO;QAC3B,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;IACnD,CAAC;IACD,GAAG,CAAC,SAAiB,EAAE,EAAO;QAC5B,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;IACjC,CAAC;IACD,IAAI,CAAC,SAAiB,EAAE,IAAS;QAC/B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACpC,CAAC;IACD,IAAI,CAAC,OAAe;QAClB,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IAC7B,CAAC;IACD,SAAS;;QACP,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAC7B,UAAI,CAAC,MAAM,0CAAE,UAAU,GAAG;QAC1B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;;0EA/BU,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAFZ,MAAM;;;;;;;;;;;;;;;;;;;;;;ICHlB,6EAIgB;;;IADd,yEAAa;;ACIV,MAAM,iBAAiB;IAE5B,gBAAe,CAAC;IAEhB,QAAQ,KAAU,CAAC;;kFAJR,iBAAiB;iGAAjB,iBAAiB;QDR9B,yEAAmC;QACjC,+HAIgB;QAClB,4DAAM;;QAJe,0DAAU;QAAV,8EAAU;;;;;;;;;;;;;;AEF/B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+E;;;;AAQxE,MAAM,oBAAoB;IAI/B;QADA,qBAAgB,GAAyB,IAAI,0DAAY,EAAU,CAAC;IACrD,CAAC;IAEhB,kBAAkB;QAChB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC5C,CAAC;;wFARU,oBAAoB;oGAApB,oBAAoB;QCRjC,6EAAuE;QACrE,yEAAqC;QACnC,4EAAyD;QACzD,oEAAG;QAAA,uDAAmB;QAAA,4DAAI;QAC5B,4DAAM;QACN,mFAA8C;QAA/B,mJAAS,wBAAoB,IAAC;QAC3C,oEAAoD;QACtD,4DAAgB;QAClB,4DAAU;;QANO,0DAA6B;QAA7B,0FAA6B;QACvC,0DAAmB;QAAnB,kFAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACMnB,MAAM,eAAe;IAC1B,YAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QACpE,iBAAY,GAAQ,IAAI,CAAC;IAD8C,CAAC;IAExE,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;YACpD,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAEK,QAAQ;;YACZ,IAAI;gBACF,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;gBAChC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;aACpC;YAAC,OAAO,GAAG,EAAE;gBACZ,OAAO,CAAC,GAAG,CAAC,gDAAgD,EAAE,GAAG,CAAC,CAAC;gBACnE,MAAM,GAAG,CAAC;aACX;QACH,CAAC;KAAA;;8EAjBU,eAAe;+FAAf,eAAe;QCT5B,4EAA4B;QAC1B,yEAA4D;QAC1D,uEAAmC;QACjC,oEAA2D;QAC7D,4DAAI;QACJ,yEAA2C;QACzC,mFAAoE;QAClE,oEAAiD;QACnD,4DAAgB;QAChB,yEAAsD;QACpD,4EAAiE;QACjE,gFAAe;QACb,0EAKE;QADA,qIAAS,cAAU,IAAC;QAJtB,4DAKE;QACJ,4DAAgB;QAClB,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAS;;QApBW,0DAAkB;QAAlB,2EAAkB;QAIjB,0DAA0B;QAA1B,mFAA0B;QAI1B,0DAAqC;QAArC,kGAAqC;;;;;;;;;;;;;;;;;;;;ACFnD,MAAM,qBAAqB;IAChC,YAAoB,QAAoB;QAApB,aAAQ,GAAR,QAAQ,CAAY;IAAG,CAAC;IAE5C,QAAQ;QACN,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YACpD,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,QAAQ,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YAC1D,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE,QAAQ,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;IACL,CAAC;;0FAVU,qBAAqB;qGAArB,qBAAqB;QCRlC,oEAAgC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUzB,MAAM,oBAAoB;IAG/B,gBAAe,CAAC;IAChB,IAAI,OAAO;QACT,IAAI,CAAC,IAAI,CAAC,IAAI;YAAE,OAAO,IAAI,CAAC;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACnD,CAAC;IAED,QAAQ,KAAU,CAAC;;wFATR,oBAAoB;oGAApB,oBAAoB;QCVjC,yEAIC;QACC,4EAAkD;QAElD,yEAAiD;QAC/C,oEAAG;QAAA,uDAAe;QAAA,4DAAI;QACtB,oEAAG;QAAA,uDAA+D;QAAA,4DAAI;QACxE,4DAAM;QACN,oEAAG;QAAA,uDAAoC;;QAAA,4DAAI;QAC7C,4DAAM;;QATJ,2JAAkC;QAErB,0DAAsB;QAAtB,mFAAsB;QAG9B,0DAAe;QAAf,8EAAe;QACf,0DAA+D;QAA/D,sIAA+D;QAEjE,0DAAoC;QAApC,6JAAoC;;;;;;;;;;;;;;;;;;;ACJlC,MAAM,qBAAqB;IAEhC,gBAAe,CAAC;IAEhB,QAAQ,KAAU,CAAC;;0FAJR,qBAAqB;qGAArB,qBAAqB;;QCPlC,4EAA8D;QAC5D,6DAAyB;QAC3B,4DAAS;;;;;;;;;;;;;;ACFT;AAAA;AAAA;AAAA;AAAA;AAA+E;;;;AAQxE,MAAM,6BAA6B;IAIxC;QADA,wBAAmB,GAAyB,IAAI,0DAAY,EAAU,CAAC;IACxD,CAAC;IAChB,qBAAqB;QACnB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC/C,CAAC;IACD,QAAQ,KAAU,CAAC;;0GARR,6BAA6B;6GAA7B,6BAA6B;QCR1C,6EAAgF;QAC9E,yEAAqC;QACnC,4EAAyD;QACzD,oEAAG;QAAA,uDAAmB;QAAA,4DAAI;QAC5B,4DAAM;QACN,mFAAiD;QAAlC,4JAAS,2BAAuB,IAAC;QAC9C,oEAAuD;QACzD,4DAAgB;QAClB,4DAAU;;QANO,0DAA6B;QAA7B,0FAA6B;QACvC,0DAAmB;QAAnB,kFAAmB;;;;;;;;;;;;;;ACH1B;AAAA;AAAA;AAAA;AAAA;AAA+E;;;;;;ICC7E,kFAKC;IADC,6YAAiD;IAClD,4DAAe;;;IAFd,yEAAa;;ADIV,MAAM,iBAAiB;IAG5B;QADU,qBAAgB,GAAyB,IAAI,0DAAY,EAAU,CAAC;IAC/D,CAAC;IAEhB,QAAQ,KAAU,CAAC;IAEnB,SAAS,CAAC,GAAW,EAAE,IAAU;QAC/B,OAAO,IAAI,CAAC,GAAG,CAAC;IAClB,CAAC;IAED,kBAAkB,CAAC,EAAU;QAC3B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,CAAC;;kFAbU,iBAAiB;iGAAjB,iBAAiB;QCR9B,yEAAuB;QACrB,+HAKgB;QAClB,4DAAM;;QALe,0DAAU;QAAV,8EAAU;;;;;;;;;;;;;;;;;;;;;;ACYxB,MAAM,SAAS;IACpB,YAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAMpE,iBAAY,GAAQ,IAAI,CAAC;QALvB,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,SAAS,CACtC,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,CAC7C,CAAC;IACJ,CAAC;IAID,WAAW,CACT,KAA6B,EAC7B,KAA0B;QAM1B,IAAI,KAAK,CAAC,GAAG,KAAK,OAAO,EAAE;YACzB,gCAAgC;YAChC,IAAI,IAAI,CAAC,YAAY;gBAAE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;SACvD;aAAM;YACL,+BAA+B;YAE/B,IAAI,CAAC,IAAI,CAAC,YAAY;gBAAE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;SAC5D;QACD,OAAO,IAAI,CAAC;IACd,CAAC;;kEA1BU,SAAS;4FAAT,SAAS,WAAT,SAAS,mBAFR,MAAM;;;;;;;;;;;;;ACPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;;;;;;;;ICJzC,wEAA8C;;ADWzC,MAAM,YAAY;IAEvB,YACU,WAAwB,EACxB,WAAwB,EACxB,aAA4B,EAC5B,QAAoB;QAHpB,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,aAAQ,GAAR,QAAQ,CAAY;QAL9B,iBAAY,GAAQ,IAAI,CAAC;IAMtB,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;YACpD,IAAI,QAAQ,EAAE;gBACZ,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;aAC9B;YACD,IAAI,QAAQ,KAAK,IAAI,CAAC,YAAY,EAAE;gBAClC,IAAI,QAAQ,EAAE;oBACZ,iCAAiC;oBACjC,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;oBAC/B,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;oBACtC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;oBAC3B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;oBACtC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,IAAS,EAAE,EAAE;wBAC3C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;oBACpC,CAAC,CAAC,CAAC;oBACH,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,EAAO,EAAE,EAAE;wBAC/C,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC;oBAC5C,CAAC,CAAC,CAAC;oBACH,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;iBAC9B;qBAAM,IAAI,CAAC,QAAQ,EAAE;oBACpB,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;oBAC1C,iCAAiC;oBACjC,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;iBAChC;aACF;YACD,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;;wEApCU,YAAY;4FAAZ,YAAY;QCZzB,yEAA6B;QAC3B,sHAA8C;QAC9C,gFAAyC;QAEzC,2EAA+B;QACjC,4DAAM;;QAJS,0DAAkB;QAAlB,kFAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;ICA/B,2EAGC;IADC,yVAA2C;IAC5C,4DAAQ;;;;IACT,4EAGC;IADC,2VAA2C;IAC5C,4DAAS;;ACDL,MAAM,aAAa;IACxB;QAEA,aAAQ,GAAW,OAAO,CAAC;IAFZ,CAAC;IAIhB,cAAc,CAAC,OAAe;QAC5B,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,OAAO,CAAC,CAAC;QAC7C,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;IAC1B,CAAC;IAED,QAAQ,KAAU,CAAC;;0EAVR,aAAa;6FAAb,aAAa;QDP1B,6EAAyC;QACvC,6GAGS;QACT,+GAGU;QACZ,4DAAU;;QAPL,0DAA0B;QAA1B,0FAA0B;QAI1B,0DAA2B;QAA3B,2FAA2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEMzB,MAAM,aAAa;IAGxB,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAEhD,QAAQ;QACN,uBAAuB;QACvB,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;QAE7B,6BAA6B;QAC7B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,SAAS,EAAE,EAAE;YAC9C,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qCAAqC;IACrC,UAAU;IACV,+CAA+C;IAC/C,oBAAoB;IACpB,2DAA2D;IAC3D,iBAAiB;IACjB,MAAM;IACN,IAAI;IAEJ,SAAS,CAAC,GAAW,EAAE,IAAU;QAC/B,OAAO,IAAI,CAAC,GAAG,CAAC;IAClB,CAAC;;0EA1BU,aAAa;6FAAb,aAAa;QCZ1B,8EAAwC;QACtC,yEAA8B;QAC5B,oFAAoD;QAClD,sEAAqE;QACvE,4DAAiB;QACjB,0EAAuC;QACzC,4DAAM;QACR,4DAAW;;QAFI,0DAAe;QAAf,4EAAe;;;;;;;;;;;;;;ACJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACF;AACX;AAEW;AACT;AACa;AACA;AACuB;AACD;AACT;AACjB;AACyB;AAChB;AACM;AACE;AACS;AAC2B;AAC1B;AACJ;AAC7B;AAElD,WAAW;AAC+B;AACgB;AAE1D,WAAW;AACgD;AACA;AACJ;AACW;AACT;AACF;AACE;AAEgC;AACN;AACX;AACV;AACG;;AA2C1D,MAAM,SAAS;;kEAAT,SAAS;yFAAT,SAAS,cAFR,2DAAY;8FADb,CAAC,wDAAU,EAAE,uEAAa,CAAC,YAhB7B;YACP,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;YAChB,0DAAW;YACX,uEAAa;YACb,6FAAuB;YACvB,yEAAe;YACf,yEAAe;YACf,qEAAa;YACb,gFAAkB;YAClB,uEAAc;YACd,qEAAa;YACb,uEAAe;YACf,gEAAc;SACf;oIAIU,SAAS,mBAvClB,2DAAY;QACZ,wEAAa;QACb,wEAAa;QACb,+FAAoB;QACpB,8FAAoB;QACpB,qFAAiB;QACjB,qEAAY;QACZ,8FAAmB;QACnB,8EAAe;QACf,oFAAgB;QAChB,sFAAiB;QACjB,+FAAoB;QACpB,0HAA6B;QAC7B,gGAAmB;QACnB,sGAAqB;QACrB,gGAAqB;QACrB,qFAAgB;QAChB,2EAAc;QACd,8EAAe,aAGf,uEAAa;QACb,oEAAgB;QAChB,qEAAgB;QAChB,0DAAW;QACX,uEAAa;QACb,6FAAuB;QACvB,yEAAe;QACf,yEAAe;QACf,qEAAa;QACb,gFAAkB;QAClB,uEAAc;QACd,qEAAa;QACb,uEAAe;QACf,gEAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IChEd,qEAIO;;;IADL,uEAAW;;;IAPf,0EAGC;IACC,iIAIO;IACT,4DAAM;;;IAJc,0DAAc;IAAd,qFAAc;;;IAMhC,2EAA8C;IAAA,+EAAoB;IAAA,4DAAO;;;IArB7E,6EAA6E;IAC3E,yEAAyB;IACvB,yEAA8C;IAC5C,4EAAkD;IAClD,yEAAmB;IACjB,4EAA0B;IAAA,uDAAgB;IAAA,4DAAS;IACnD,oEAAG;IAAA,uDAAe;IAAA,4DAAI;IACxB,4DAAM;IACR,4DAAM;IACR,4DAAM;IACN,0HASM;IACN,wNAEc;IACd,+EAA2C;IAC7C,4DAAU;;;;IArBS,0DAAsB;IAAtB,sFAAsB;IAEP,0DAAgB;IAAhB,2FAAgB;IACvC,0DAAe;IAAf,iFAAe;IAKrB,0DAAyB;IAAzB,2HAAyB;IAYd,0DAAa;IAAb,6EAAa;;;IAG3B,2EAA8C;IAAA,qEAAU;IAAA,4DAAO;;ACd1D,MAAM,oBAAoB;IAC/B,YACU,WAAwB,EACxB,KAAqB,EACrB,QAAoB;QAFpB,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,aAAQ,GAAR,QAAQ,CAAY;IAC3B,CAAC;IAMJ,QAAQ;QACN,4BAA4B;QAC5B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE;YAC7D,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;YAC/B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,CAAC,CAAC,CAAC;QAEH,6BAA6B;QAC7B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,SAAS,EAAE,EAAE;YAC9C,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CACxB,CAAC,QAAc,EAAE,EAAE,CAAC,QAAQ,CAAC,GAAG,KAAK,IAAI,CAAC,MAAM,CACjD,CAAC;QACJ,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,4BAA4B,CAAC,CAAC;IAC5D,CAAC;IAED,IAAI,SAAS;QACX,IAAI,CAAC,IAAI,CAAC,IAAI;YAAE,OAAO,EAAE,CAAC;QAC1B,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,OAAY,EAAE,EAAE;YACxD,OAAO,IAAI,OAAO,CAAC,QAAQ,EAAE,CAAC;QAChC,CAAC,CAAC,CAAC;QACH,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC;IAED,SAAS,CAAC,GAAW,EAAE,IAAU;QAC/B,OAAO,IAAI,CAAC,GAAG,CAAC;IAClB,CAAC;;wFArCU,oBAAoB;oGAApB,oBAAoB;QDZjC,yHAwBU;QACV,4MAEc;;;QA3BJ,0EAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEYhB,8DAMC;IAND,yEAMC;IACC,qEAGQ;IACV,4DAAM;;;IAEJ,qEAAmB;;ACfpB,MAAM,mBAAmB;IAE9B,YACU,WAAwB,EACxB,WAAwB;QADxB,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QAGlC,iBAAY,GAAQ,IAAI,CAAC;QAEzB,cAAS,GAAY,KAAK,CAAC;IAJxB,CAAC;IAMJ,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,SAAS,CACtC,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,CAC7C,CAAC;IACJ,CAAC;IAEK,SAAS;;YACb,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC;YAC3D,MAAM,GAAG,GAAG;gBACV,IAAI,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE,aAAa,EAAE;gBACtC,GAAG,EAAE,IAAI,CAAC,GAAG;gBACb,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE;aACtB,CAAC;YACF,IAAI;gBACF,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;aACnD;YAAC,OAAO,GAAG,EAAE;gBACZ,EAAE;aACH;oBAAS;gBACR,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;QACH,CAAC;KAAA;;sFAhCU,mBAAmB;mGAAnB,mBAAmB;QDVhC,yEAA0B;QACxB,yEAA8C;QAC5C,0EAAiD;QAApC,2IAAU,eAAW,IAAC;QAAc,4DAAO;QACxD,2EAOE;QAFA,oLAAiB;QALnB,4DAOE;QACF,mFAAyD;QAAtB,kJAAS,eAAW,IAAC;QACtD,oHAWM;QACN,2MAEc;QAChB,4DAAgB;QAClB,4DAAM;QACR,4DAAM;;;QArBA,0DAAiB;QAAjB,4EAAiB;QAKd,0DAAkB;QAAlB,gFAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEIrB,4FAKC;IADC,0YAAqD;IACtD,4DAAwB;;;IAFvB,kFAAsB;;ACPvB,MAAM,gBAAgB;IAC3B,YACU,WAAwB,EACxB,WAAwB,EACxB,eAAgC,EAChC,MAAc;QAHd,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,WAAM,GAAN,MAAM,CAAQ;QAIxB,UAAK,GAAW,EAAE,CAAC;QASnB,SAAI,GAAW,EAAE,CAAC;QAClB,sBAAiB,GAAa,EAAE,CAAC;QACjC,WAAM,GACJ,qGAAqG,CAAC;IAfrG,CAAC;IAIJ,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,EAAE;;YACpC,OAAO,CACL,QAAQ,CAAC,GAAG,YAAK,IAAI,CAAC,YAAY,0CAAE,GAAG;gBACvC,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAC/C,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAMD,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE;YAC3C,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CACtD,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,GAAG,KAAK,MAAM,CACtC,CAAC;YACF,OAAO;gBACL,GAAG;gBACH,QAAQ;gBACR,aAAa;aACd,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kBAAkB,CAAC,QAAa;QAC9B,IAAI,CAAC,iBAAiB,GAAG,CAAC,GAAG,IAAI,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC;IACjE,CAAC;IACD,qBAAqB,CAAC,KAAU;QAC9B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CACpD,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,KAAK,KAAK,CAC/B,CAAC;IACJ,CAAC;IACD,UAAU,CAAC,MAAc;QACvB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;IACrB,CAAC;IACD,YAAY,CAAC,MAAc;QACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAEK,SAAS;;;YACb,eAAe;YACf,IAAI,QAAC,IAAI,CAAC,cAAc,0CAAE,MAAM,GAAE;gBAChC,IAAI,CAAC,eAAe,CAAC,MAAM,CACzB,OAAO,EACP,qCAAqC,CACtC,CAAC;gBACF,OAAO;aACR;YAED,MAAM,OAAO,GAAG;gBACd,IAAI,EAAE,EAAW;gBACjB,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,cAAc,EAAE;oBACd;wBACE,GAAG,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG;wBAC1B,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ;wBACpC,aAAa,EAAE,IAAI,CAAC,YAAY,CAAC,aAAa;qBAC/C;oBACD,GAAG,IAAI,CAAC,cAAc;iBACvB;gBACD,MAAM,EAAE,IAAI,CAAC,MAAM;aACpB,CAAC;YACF,IAAI;gBACF,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBACvD,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;gBACrD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,SAAS,MAAM,EAAE,CAAC,CAAC;aAC9C;YAAC,OAAO,GAAG,EAAE;gBACZ,IAAI,CAAC,eAAe,CAAC,MAAM,CACzB,OAAO,EACP,0CAA0C,CAC3C,CAAC;aACH;;KACF;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;YACpD,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,SAAS,EAAE,EAAE;YAC9C,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;;gFA9FU,gBAAgB;gGAAhB,gBAAgB;QDb7B,6EAAsC;QACpC,0EAA6B;QAAvB,wIAAU,eAAW,IAAC;QAC1B,yEAAoD;QAClD,4EAA6C;QAC7C,oFAAgD;QAC9C,2EAME;QAHA,kLAAkB;QAHpB,4DAME;QACJ,4DAAiB;QACjB,4EAA0C;QAAA,sEAAW;QAAA,4DAAS;QAChE,4DAAM;QACN,yEAAwC;QACtC,wEAAqB;QAAA,2EAAe;QAAA,4DAAK;QACzC,kJAKyB;QAC3B,4DAAM;QACN,yEAAqB;QAAA,mEAAO;QAAA,4DAAK;QACjC,iFAGC;QADC,wKAAoB,8BAA0B,IAAC;QAChD,4DAAY;QACf,4DAAO;QACT,4DAAU;;QA3BS,0DAAiB;QAAjB,8EAAiB;QAK1B,0DAAkB;QAAlB,6EAAkB;QAUM,0DAAmB;QAAnB,uFAAmB;QAQ/C,0DAAqB;QAArB,kFAAqB;;;;;;;;;;;;;;;;;;AEnBpB,MAAM,gBAAgB;IAC3B,gBAAe,CAAC;IAEhB,QAAQ,KAAU,CAAC;;gFAHR,gBAAgB;gGAAhB,gBAAgB;QCP7B,yEAA6C;QAC3C,oEAIE;QACJ,4DAAM;;;;;;;;;;;;;;;;;;;;;ACLqC;;;AAQpC,MAAM,WAAW;IACtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAGpC,MAAM;QACN,qCAAqC;QACrC,OAAO;QACP,YAAO,GAAG,OAAO,CAAC;QAElB,qBAAgB,GAAS,IAAI,CAAC,KAAK,CACjC,cAAc,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,MAAM,CACjD,CAAC;QAEM,mBAAc,GAAG,IAAI,oDAAe,CAC1C,IAAI,CAAC,gBAAgB,CACtB,CAAC;QACK,kBAAa,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;QAClD,YAAO,GAAG,IAAI,oDAAe,CAAS,EAAE,CAAC,CAAC;QAC3C,WAAM,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;QAhB1C,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAiBY,KAAK,CAAC,QAAgB,EAAE,QAAgB;;YACnD,IAAI;gBACF,MAAM,YAAY,GAAQ,MAAM,IAAI,CAAC,IAAI;qBACtC,IAAI,CACH,GAAG,IAAI,CAAC,OAAO,YAAY,EAC3B;oBACE,QAAQ;oBACR,QAAQ;iBACT,EACD,EAAE,eAAe,EAAE,IAAI,EAAE,CAC1B;qBACA,SAAS,EAAE,CAAC;gBACf,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBACvC,cAAc,CAAC,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;gBACrE,OAAO,YAAY,CAAC;aACrB;YAAC,OAAO,GAAG,EAAE;gBACZ,OAAO,CAAC,GAAG,CAAC,8BAA8B,EAAE,GAAG,CAAC,CAAC;gBACjD,MAAM,GAAG,CAAC;aACX;QACH,CAAC;KAAA;IAEY,MAAM,CAAC,OAAY;;YAC9B,IAAI;gBACF,MAAM,YAAY,GAAQ,MAAM,IAAI,CAAC,IAAI;qBACtC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,aAAa,EAAE,OAAO,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;qBACtE,SAAS,EAAE,CAAC;gBACf,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBACvC,cAAc,CAAC,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;gBACrE,OAAO,YAAY,CAAC;aACrB;YAAC,OAAO,GAAG,EAAE;gBACZ,OAAO,CAAC,GAAG,CAAC,8BAA8B,EAAE,GAAG,CAAC,CAAC;gBACjD,MAAM,GAAG,CAAC;aACX;QACH,CAAC;KAAA;IAEY,MAAM;;YACjB,IAAI;gBACF,MAAM,IAAI,CAAC,IAAI;qBACZ,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,aAAa,EAAE,EAAE,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;qBACjE,SAAS,EAAE,CAAC;gBACf,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC/B,cAAc,CAAC,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC3D,OAAO;aACR;YAAC,OAAO,GAAG,EAAE;gBACZ,OAAO,CAAC,GAAG,CAAC,8BAA8B,EAAE,GAAG,CAAC,CAAC;gBACjD,MAAM,GAAG,CAAC;aACX;QACH,CAAC;KAAA;IAEY,SAAS;;YACpB,IAAI;gBACF,MAAM,KAAK,GAAQ,MAAM,IAAI,CAAC,IAAI;qBAC/B,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,MAAM,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;qBACrD,SAAS,EAAE,CAAC;gBACf,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACzB,OAAO,IAAI,CAAC,MAAM,CAAC;aACpB;YAAC,OAAO,GAAG,EAAE;gBACZ,OAAO,CAAC,GAAG,CAAC,mCAAmC,EAAE,GAAG,CAAC,CAAC;gBACtD,MAAM,GAAG,CAAC;aACX;QACH,CAAC;KAAA;;sEAhFU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;;;;;;;;;;ACNuB;;;;;AASpC,MAAM,WAAW;IACtB,YACU,IAAgB,EAChB,WAAwB,EACxB,eAAgC;QAFhC,SAAI,GAAJ,IAAI,CAAY;QAChB,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAI1C,MAAM;QACN,qCAAqC;QACrC,OAAO;QACP,YAAO,GAAG,OAAO,CAAC;QAGV,YAAO,GAAG,IAAI,oDAAe,CAAC,IAAI,CAAC,CAAC;QACrC,WAAM,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;QAT1C,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC;IACjE,CAAC;IAUM,oBAAoB,CAAC,IAAU;QACpC,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE;YAC5D,OAAO;SACR;QACD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;IAC3C,CAAC;IAEM,yBAAyB,CAAC,MAAc;QAC7C,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CACpC,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,GAAG,KAAK,MAAM,CACtC,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAClC,CAAC;IAEM,uBAAuB,CAAC,IAAU;QACvC,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAClC,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,CACxC,CAAC;QACF,IAAI,OAAO,GAAG,CAAC;YAAE,OAAO;QACxB,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAC5D,YAAY,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QACtC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAClC,CAAC;IAEM,oBAAoB,CAAC,QAAa;QACvC,IAAI,QAAQ,CAAC,IAAI,KAAK,UAAU,EAAE;YAChC,sBAAsB;YACtB,OAAO,CAAC,GAAG,CAAC,+BAA+B,EAAE,QAAQ,CAAC,CAAC;YACvD,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACzC,IAAI,CAAC,eAAe,CAAC,MAAM,CACzB,SAAS,EACT,gCAAgC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,CACrD,CAAC;SACH;aAAM,IAAI,QAAQ,CAAC,IAAI,KAAK,aAAa,EAAE;YAC1C,sBAAsB;YACtB,OAAO,CAAC,GAAG,CAAC,kCAAkC,EAAE,QAAQ,CAAC,CAAC;YAC1D,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAChD,OAAO;SACR;aAAM,IAAI,QAAQ,CAAC,IAAI,KAAK,cAAc,EAAE;YAC3C,sBAAsB;YACtB,OAAO,CAAC,GAAG,CAAC,mCAAmC,EAAE,QAAQ,CAAC,CAAC;YAC3D,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC5C,MAAM,EAAE,IAAI,EAAE,GAAG,QAAQ,CAAC;YAC1B,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC5C,IAAI,CAAC,eAAe,CAAC,MAAM,CACzB,SAAS,EACT,IAAI,IAAI,CAAC,IAAI,MAAM,GAAG,CAAC,IAAI,CAAC,QAAQ,KAAK,GAAG,CAAC,GAAG,EAAE,CACnD,CAAC;SACH;IACH,CAAC;IAEY,SAAS;;YACpB,IAAI;gBACF,MAAM,KAAK,GAAQ,MAAM,IAAI,CAAC,IAAI;qBAC/B,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,MAAM,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;qBACrD,SAAS,EAAE,CAAC;gBACf,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACzB,OAAO,IAAI,CAAC,MAAM,CAAC;aACpB;YAAC,OAAO,GAAG,EAAE;gBACZ,OAAO,CAAC,GAAG,CAAC,mCAAmC,EAAE,GAAG,CAAC,CAAC;gBACtD,MAAM,GAAG,CAAC;aACX;QACH,CAAC;KAAA;IAEY,OAAO,CAAC,OAAY;;YAC/B,IAAI;gBACF,MAAM,WAAW,GAAQ,MAAM,IAAI,CAAC,IAAI;qBACrC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,MAAM,EAAE,OAAO,EAAE;oBACpC,eAAe,EAAE,IAAI;iBACtB,CAAC;qBACD,SAAS,EAAE,CAAC;gBAEf,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC;gBACvC,OAAO,WAAW,CAAC,GAAG,CAAC;aACxB;YAAC,OAAO,GAAG,EAAE;gBACZ,OAAO,CAAC,GAAG,CAAC,mCAAmC,EAAE,GAAG,CAAC,CAAC;gBACtD,MAAM,GAAG,CAAC;aACX;QACH,CAAC;KAAA;IACY,MAAM,CAAC,MAAc,EAAE,GAAQ;;YAC1C,IAAI;gBACF,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;gBACnC,MAAM,UAAU,GAAQ,MAAM,IAAI,CAAC,IAAI;qBACpC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,QAAQ,MAAM,MAAM,EAAE,GAAG,EAAE;oBAC9C,eAAe,EAAE,IAAI;iBACtB,CAAC;qBACD,SAAS,EAAE,CAAC;gBAEf,0DAA0D;gBAC1D,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CACzB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,GAAG,KAAK,MAAM,CAAC,CAAC,CACvE,CAAC;gBACF,QAAQ,CAAC,IAAI,GAAG,CAAC,GAAG,QAAQ,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;gBAC/C,MAAM,SAAS,GAAW,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBACjE,MAAM,OAAO,GAAG,SAAS,CAAC,SAAS,CACjC,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,GAAG,KAAK,MAAM,CACtC,CAAC;gBACF,SAAS,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;gBACvC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC7B,OAAO,IAAI,CAAC,MAAM,CAAC;aACpB;YAAC,OAAO,GAAG,EAAE;gBACZ,OAAO,CAAC,GAAG,CAAC,kCAAkC,EAAE,GAAG,CAAC,CAAC;gBACrD,MAAM,GAAG,CAAC;aACX;QACH,CAAC;KAAA;;sEAzHU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;ACPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACK;AACA;AACW;AACvB;AACmC;;;AAEnF,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,wEAAa,EAAE,WAAW,EAAE,CAAC,4DAAS,CAAC,EAAE;IACpE;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,mFAAgB;QAC3B,SAAS,EAAE,MAAM;QACjB,WAAW,EAAE,CAAC,4DAAS,CAAC;KACzB;IACD;QACE,IAAI,EAAE,cAAc;QACpB,SAAS,EAAE,+FAAoB;QAC/B,SAAS,EAAE,MAAM;QACjB,WAAW,EAAE,CAAC,4DAAS,CAAC;KACzB;IACD;QACE,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,wEAAa;QACxB,SAAS,EAAE,MAAM;QACjB,WAAW,EAAE,CAAC,4DAAS,CAAC;KACzB;IACD,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE;CACrD,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,EAChD,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;;;ACvBjB,MAAM,YAAY;IAGvB,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAEhD,IAAI,YAAY;QACd,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC;QAC3D,OAAO,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;IAC9B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;YACpD,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;;wEAdU,YAAY;4FAAZ,YAAY;QCVzB,0EAAkD;QAChD,6EAAiC;QAC/B,yEAA0C;QACxC,yEAAQ;QAAA,uDAAuB;QAAA,4DAAS;QAC1C,4DAAM;QACN,yEAAwC;QACtC,uEAAmB;QAAA,uDAAa;QAAA,4DAAI;QACpC,oEAAG;QAAA,uDAAmC;;QAAA,4DAAI;QAC5C,4DAAM;QACR,4DAAU;QACV,qEAA2B;QAC7B,4DAAU;;QAXD,4GAAwC;QAGnC,0DAAuB;QAAvB,sFAAuB;QAGZ,0DAAa;QAAb,4EAAa;QAC7B,0DAAmC;QAAnC,6JAAmC;;;;;;;;;;;;;;;;;;;;ACPG;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  @Output()\n  onChangeAuthType: EventEmitter<string> = new EventEmitter();\n  constructor(private userService: UserService, private router: Router) {}\n  username: any = '';\n  password: any = '';\n  isLoading: boolean = false;\n\n  async onSubmit() {\n    this.isLoading = true;\n    try {\n      await this.userService.login(this.username, this.password);\n      this.router.navigateByUrl('/');\n    } catch (err) {\n      //\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  changeAuthType() {\n    this.onChangeAuthType.emit('signup');\n  }\n\n  async onGuest() {\n    this.username = 'guest';\n    this.password = 'guest';\n    this.onSubmit();\n  }\n\n  ngOnInit(): void {}\n}\n","<mat-card class=\"login\">\n  <form class=\"flex column\" (submit)=\"onSubmit()\">\n    <div class=\"img-container center-childs\">\n      <img src=\"../../../assets/img/logo-small.jpg\" alt=\"\" />\n    </div>\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Username</mat-label>\n      <input\n        matInput\n        name=\"username\"\n        [(ngModel)]=\"username\"\n        placeholder=\"hadar\"\n      />\n    </mat-form-field>\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Password</mat-label>\n      <input\n        matInput\n        type=\"password\"\n        name=\"password\"\n        [(ngModel)]=\"password\"\n        placeholder=\"hadar1\"\n      />\n    </mat-form-field>\n    <div class=\"buttons-bar flex\">\n      <button mat-raised-button color=\"primary\" class=\"fg-1 center-childs\">\n        <p *ngIf=\"!isLoading; else loading\">Login</p>\n        <ng-template #loading>\n          <loading></loading>\n        </ng-template>\n      </button>\n      <button\n        class=\"fg-1\"\n        mat-raised-button\n        color=\"accent\"\n        type=\"button\"\n        (click)=\"onGuest()\"\n      >\n        Guest\n      </button>\n    </div>\n    <div class=\"change-auth-type\">\n      <p>Not have An account? <a (click)=\"changeAuthType()\">signup</a></p>\n    </div>\n  </form>\n</mat-card>\n","/* (ignored) */","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UtilService {\n  constructor() {}\n\n  public makeId(length = 5) {\n    var text = '';\n    var possible =\n      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    for (var i = 0; i < length; i++)\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n    return text;\n  }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss'],\n})\nexport class SignupComponent implements OnInit {\n  @Output()\n  onChangeAuthType: EventEmitter<string> = new EventEmitter();\n  constructor(private userService: UserService, private router: Router) {}\n\n  username: any = '';\n  password: any = '';\n  fullname: any = 'Mach-Patcha';\n  mail: any = 'MachPatcha@gmail.com';\n  isLoading: boolean = false;\n\n  async onSubmit() {\n    this.isLoading = true;\n    const { username, password, fullname, mail } = this;\n    try {\n      await this.userService.signup({ username, password, fullname, mail });\n      this.router.navigateByUrl('/');\n    } catch (err) {\n      //\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  changeAuthType() {\n    this.onChangeAuthType.emit('login');\n  }\n\n  ngOnInit(): void {\n    console.log('creating signup cmp...');\n  }\n}\n","<mat-card class=\"signup\">\n  <form class=\"flex column\" (submit)=\"onSubmit()\">\n    <div class=\"img-container center-childs\">\n      <img src=\"../../../assets/img/logo-small.jpg\" alt=\"\" />\n    </div>\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Username</mat-label>\n      <input\n        matInput\n        name=\"username\"\n        [(ngModel)]=\"username\"\n        placeholder=\"hadar\"\n      />\n    </mat-form-field>\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Password</mat-label>\n      <input\n        matInput\n        type=\"password\"\n        name=\"password\"\n        [(ngModel)]=\"password\"\n        placeholder=\"hadar1\"\n      />\n    </mat-form-field>\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Full Name</mat-label>\n      <input\n        matInput\n        type=\"password\"\n        name=\"fullname\"\n        [(ngModel)]=\"fullname\"\n        placeholder=\"Mach-Patcha\"\n      />\n    </mat-form-field>\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Mail</mat-label>\n      <input\n        matInput\n        type=\"email\"\n        name=\"mail\"\n        [(ngModel)]=\"mail\"\n        placeholder=\"MachPatcha@gmail.com\"\n      />\n    </mat-form-field>\n    <div class=\"buttons-bar flex\">\n      <button mat-raised-button color=\"primary\" class=\"center-childs\">\n        <p *ngIf=\"!isLoading; else loading\">Signup</p>\n        <ng-template #loading>\n          <loading></loading>\n        </ng-template>\n      </button>\n    </div>\n    <div class=\"change-auth-type\">\n      <p>Already have an account? <a (click)=\"changeAuthType()\">login</a></p>\n    </div>\n  </form>\n</mat-card>\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'profile-img',\n  templateUrl: './profile-img.component.html',\n  styleUrls: ['./profile-img.component.scss'],\n})\nexport class ProfileImgComponent implements OnInit {\n  @Input() imgUrl: string;\n  @Input() imgName: string;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"profile-img center-childs\">\n  <img [src]=\"imgName ? '../../../../assets/img/' + imgName : imgUrl\" />\n</div>\n","import { Injectable, isDevMode } from '@angular/core';\nimport * as io from 'socket.io-client';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SocketService {\n  constructor() {\n    console.log('socket service created!');\n  }\n  //dev:\n  // baseUrl = '//localhost:3030';\n  //prod:\n  baseUrl = '';\n  socket: any;\n  setup() {\n    console.log('setupping');\n    this.socket = io(this.baseUrl);\n    return this.socket;\n  }\n  on(eventName: string, cb: any) {\n    this.socket.off(eventName, cb).on(eventName, cb);\n  }\n  off(eventName: string, cb: any) {\n    this.socket.off(eventName, cb);\n  }\n  emit(eventName: string, data: any) {\n    this.socket.emit(eventName, data);\n  }\n  join(channel: string) {\n    console.log('joining room...', channel);\n    this.emit('join', channel);\n  }\n  terminate() {\n    console.log('disconnecting');\n    this.socket?.disconnect();\n    this.socket = null;\n  }\n}\n","<div class=\"chat-list flex column\">\n  <chat-preview\n    *ngFor=\"let chat of chats; index as idx\"\n    trackBy=\"trackByFn\"\n    [chat]=\"chat\"\n  ></chat-preview>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Chat } from '../../models/chat';\n\n@Component({\n  selector: 'chat-list',\n  templateUrl: './chat-list.component.html',\n  styleUrls: ['./chat-list.component.scss'],\n})\nexport class ChatListComponent implements OnInit {\n  @Input() chats: Chat[] | null;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { User } from 'src/app/models/user';\n\n@Component({\n  selector: 'user-preview',\n  templateUrl: './user-preview.component.html',\n  styleUrls: ['./user-preview.component.scss'],\n})\nexport class UserPreviewComponent {\n  @Input() user: User;\n  @Output()\n  addParticipation: EventEmitter<string> = new EventEmitter<string>();\n  constructor() {}\n\n  onAddParticipation() {\n    this.addParticipation.emit(this.user._id);\n  }\n}\n","<article class=\"user-preview flex space-between align-center main-box\">\n  <div class=\"group flex align-center\">\n    <profile-img [imgUrl]=\"user.profileImgUrl\"></profile-img>\n    <p>{{ user.username }}</p>\n  </div>\n  <circle-button (click)=\"onAddParticipation()\">\n    <img src=\"../../../assets/img/plus.svg\" alt=\"Add\" />\n  </circle-button>\n</article>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit {\n  constructor(private userService: UserService, private router: Router) {}\n  loggedInUser: any = null;\n  ngOnInit(): void {\n    this.userService.loggedInUser$.subscribe((currUser) => {\n      this.loggedInUser = currUser;\n    });\n  }\n\n  async onLogout() {\n    try {\n      await this.userService.logout();\n      this.router.navigateByUrl('/auth');\n    } catch (err) {\n      console.log('error while trying log out from user service: ', err);\n      throw err;\n    }\n  }\n}\n","<header class=\"main-header\">\n  <div class=\"main-container flex space-between align-center\">\n    <a class=\"logo\" [routerLink]=\"'/'\">\n      <img src=\"../../../assets/img/logo-small.jpg\" alt=\"Logo\" />\n    </a>\n    <div class=\"buttons-box flex align-center\">\n      <circle-button [routerLink]=\"'/chat/add'\" routerLinkActive=\"active\">\n        <img src=\"../../../assets/img/plus.svg\" alt=\"\" />\n      </circle-button>\n      <div class=\"user-bar flex space-between align-center\">\n        <profile-img [imgUrl]=\"loggedInUser.profileImgUrl\"></profile-img>\n        <circle-button>\n          <img\n            src=\"../../../assets/img/logout.svg\"\n            alt=\"exit\"\n            height=\"24\"\n            (click)=\"onLogout()\"\n          />\n        </circle-button>\n      </div>\n    </div>\n  </div>\n</header>\n","import { Component, OnInit } from '@angular/core';\nimport { NgEventBus } from 'ng-event-bus';\n\n@Component({\n  selector: 'notification',\n  templateUrl: './notification.component.html',\n  styleUrls: ['./notification.component.scss'],\n})\nexport class NotificationComponent implements OnInit {\n  constructor(private eventBus: NgEventBus) {}\n\n  ngOnInit(): void {\n    this.eventBus.on('notif').subscribe((metaData: any) => {\n      console.log('*notif*, metaData:', metaData);\n    });\n    this.eventBus.on('chat-update').subscribe((metaData: any) => {\n      console.log('*chat-update*, metaData:', metaData);\n    });\n  }\n}\n","<div class=\"notification\"></div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Chat } from 'src/app/models/chat';\nimport { User } from 'src/app/models/user';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'chat-preview',\n  templateUrl: './chat-preview.component.html',\n  styleUrls: ['./chat-preview.component.scss'],\n})\nexport class ChatPreviewComponent implements OnInit {\n  @Input() chat: Chat;\n\n  constructor() {}\n  get lastMsg() {\n    if (!this.chat) return null;\n    return this.chat.msgs[this.chat.msgs.length - 1];\n  }\n\n  ngOnInit(): void {}\n}\n","<div\n  matRipple\n  class=\"chat-preview flex no-default-styles main-box\"\n  [routerLink]=\"['/chat', chat._id]\"\n>\n  <profile-img [imgUrl]=\"chat.imgUrl\"></profile-img>\n\n  <div class=\"last-msg-container flex column fg-1\">\n    <p>{{ chat.name }}</p>\n    <p>{{ lastMsg ? lastMsg.from.username + \": \" + lastMsg.txt : \"\" }}</p>\n  </div>\n  <p>{{ chat.createdAt | date: \"short\" }}</p>\n</div>\n","import { Component, Inject, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'circle-button',\n  templateUrl: './circle-button.component.html',\n  styleUrls: ['./circle-button.component.scss'],\n})\nexport class CircleButtonComponent implements OnInit {\n  @Input() navLink: string;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<button class=\"circle-button center-childs no-default-styles\">\n  <ng-content></ng-content>\n</button>\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { MiniUser, User } from 'src/app/models/user';\n\n@Component({\n  selector: 'participation-preview',\n  templateUrl: './participation-preview.component.html',\n  styleUrls: ['./participation-preview.component.scss'],\n})\nexport class ParticipationPreviewComponent implements OnInit {\n  @Input() user: MiniUser;\n  @Output()\n  removeParticipation: EventEmitter<string> = new EventEmitter<string>();\n  constructor() {}\n  onRemoveParticipation() {\n    this.removeParticipation.emit(this.user._id);\n  }\n  ngOnInit(): void {}\n}\n","<article class=\"participation-preview flex space-between align-center main-box\">\n  <div class=\"group flex align-center\">\n    <profile-img [imgUrl]=\"user.profileImgUrl\"></profile-img>\n    <p>{{ user.username }}</p>\n  </div>\n  <circle-button (click)=\"onRemoveParticipation()\">\n    <img src=\"../../../assets/img/minus.png\" alt=\"Minus\" />\n  </circle-button>\n</article>\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { User } from 'src/app/models/user';\n\n@Component({\n  selector: 'user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.scss'],\n})\nexport class UserListComponent implements OnInit {\n  @Input() users: User[];\n  @Output() addParticipation: EventEmitter<string> = new EventEmitter<string>();\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  trackByFn(idx: number, user: User) {\n    return user._id;\n  }\n\n  onAddParticipation(id: string) {\n    this.addParticipation.emit(id);\n  }\n}\n","<div class=\"user-list\">\n  <user-preview\n    *ngFor=\"let user of users; index as idx\"\n    trackBy=\"trackByFn\"\n    [user]=\"user\"\n    (addParticipation)=\"onAddParticipation(user._id)\"\n  ></user-preview>\n</div>\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from '../services/user.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private userService: UserService, private router: Router) {\n    this.userService.loggedInUser$.subscribe(\n      (currUser) => (this.loggedInUser = currUser)\n    );\n  }\n\n  loggedInUser: any = null;\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    if (state.url === '/auth') {\n      //want to go to auth scanerio...\n      if (this.loggedInUser) this.router.navigateByUrl('/');\n    } else {\n      //want to go to app scanerio...\n\n      if (!this.loggedInUser) this.router.navigateByUrl('/auth');\n    }\n    return true;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgEventBus } from 'ng-event-bus';\nimport { UserService } from 'src/app/services/user.service';\nimport { ChatService } from './services/chat.service';\nimport { SocketService } from './services/socket.service';\nimport 'angular-notifier/styles/core.scss';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  loggedInUser: any = null;\n  constructor(\n    private userService: UserService,\n    private chatService: ChatService,\n    private socketService: SocketService,\n    private eventBus: NgEventBus\n  ) {}\n\n  ngOnInit(): void {\n    this.userService.loggedInUser$.subscribe((currUser) => {\n      if (currUser) {\n        this.chatService.loadChats();\n      }\n      if (currUser !== this.loggedInUser) {\n        if (currUser) {\n          //loggedOut => loggedIn scanerio:\n          this.socketService.terminate();\n          console.log('sending setup order...');\n          this.socketService.setup();\n          this.socketService.join(currUser._id);\n          this.socketService.on('notif', (data: any) => {\n            this.eventBus.cast('notif', data);\n          });\n          this.socketService.on('chat-update', (ev: any) => {\n            this.chatService.handleExternalUpdate(ev);\n          });\n          this.chatService.loadChats();\n        } else if (!currUser) {\n          console.log('sending eliminate order...');\n          //loggedIn => loggedOut scanerio:\n          this.socketService.terminate();\n        }\n      }\n      this.loggedInUser = currUser;\n    });\n  }\n}\n","<div class=\"app flex column\">\n  <app-header *ngIf=\"loggedInUser\"></app-header>\n  <notifier-container></notifier-container>\n  <!-- <notification></notification> -->\n  <router-outlet></router-outlet>\n</div>\n","<section class=\"auth center-childs page\">\n  <login\n    *ngIf=\"authType === 'login'\"\n    (onChangeAuthType)=\"changeAuthType($event)\"\n  ></login>\n  <signup\n    *ngIf=\"authType === 'signup'\"\n    (onChangeAuthType)=\"changeAuthType($event)\"\n  ></signup>\n</section>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss'],\n})\nexport class AuthComponent implements OnInit {\n  constructor() {}\n\n  authType: string = 'login';\n\n  changeAuthType(newType: string) {\n    console.log('changing auth type: ', newType);\n    this.authType = newType;\n  }\n\n  ngOnInit(): void {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable, Subscription } from 'rxjs';\nimport { Chat } from 'src/app/models/chat';\nimport { UserService } from 'src/app/services/user.service';\nimport { ChatService } from '../../services/chat.service';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.scss'],\n})\nexport class ChatComponent implements OnInit {\n  subscription: Subscription;\n  chats: [] | null;\n  constructor(private chatService: ChatService) {}\n\n  ngOnInit(): void {\n    //load the the chats...\n    this.chatService.loadChats();\n\n    //subscribe to get updates...\n    this.chatService.chats$.subscribe((currChats) => {\n      this.chats = currChats;\n    });\n  }\n\n  // async onLoadChat(chatId: string) {\n  //   try {\n  //     await this.chatService.loadChat(chatId);\n  //   } catch (err) {\n  //     console.log('error while trying fetch chat: ', err);\n  //     throw err;\n  //   }\n  // }\n\n  trackByFn(idx: number, chat: Chat) {\n    return chat._id;\n  }\n}\n","<mat-card class=\"menu card flex column\">\n  <div class=\"menu flex column\">\n    <mat-form-field class=\"example-full-width main-box\">\n      <input matInput type=\"search\" name=\"username\" placeholder=\"Search\" />\n    </mat-form-field>\n    <chat-list [chats]=\"chats\"></chat-list>\n  </div>\n</mat-card>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ChatComponent } from './pages/chat/chat.component';\nimport { AuthComponent } from './pages/auth/auth.component';\nimport { ChatDetailsComponent } from './pages/chat-details/chat-details.component';\nimport { ChatPreviewComponent } from './cmps/chat-preview/chat-preview.component';\nimport { ChatListComponent } from './cmps/chat-list/chat-list.component';\nimport { MsgComponent } from './cmps/msg/msg.component';\nimport { SendMsgBarComponent } from './cmps/send-msg-bar/send-msg-bar.component';\nimport { HeaderComponent } from './cmps/header/header.component';\nimport { ChatAddComponent } from './pages/chat-add/chat-add.component';\nimport { UserListComponent } from './cmps/user-list/user-list.component';\nimport { UserPreviewComponent } from './cmps/user-preview/user-preview.component';\nimport { ParticipationPreviewComponent } from './cmps/participation-preview/participation-preview.component';\nimport { ProfileImgComponent } from './cmps/min/profile-img/profile-img.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NotifierModule } from 'angular-notifier';\n\n//services:\nimport { NgEventBus } from 'ng-event-bus';\nimport { SocketService } from './services/socket.service';\n\n//meterial:\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { CircleButtonComponent } from './cmps/min/circle-button/circle-button.component';\nimport { NotificationComponent } from './cmps/notification/notification.component';\nimport { LoadingComponent } from './cmps/min/loading/loading.component';\nimport { LoginComponent } from './cmps/login/login.component';\nimport { SignupComponent } from './cmps/signup/signup.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChatComponent,\n    AuthComponent,\n    ChatDetailsComponent,\n    ChatPreviewComponent,\n    ChatListComponent,\n    MsgComponent,\n    SendMsgBarComponent,\n    HeaderComponent,\n    ChatAddComponent,\n    UserListComponent,\n    UserPreviewComponent,\n    ParticipationPreviewComponent,\n    ProfileImgComponent,\n    CircleButtonComponent,\n    NotificationComponent,\n    LoadingComponent,\n    LoginComponent,\n    SignupComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatSliderModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatRippleModule,\n    NotifierModule,\n  ],\n  providers: [NgEventBus, SocketService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","<section *ngIf=\"chat; else chatPlaceholder\" class=\"chat-details flex column\">\n  <div class=\"chat-header\">\n    <div class=\"main-container flex align-center\">\n      <profile-img [imgUrl]=\"chat.imgUrl\"></profile-img>\n      <div class=\"group\">\n        <strong class=\"chat-name\">#{{ chat.name }}</strong>\n        <p>{{ usersList }}</p>\n      </div>\n    </div>\n  </div>\n  <div\n    *ngIf=\"chat.msgs?.length; else msgsPlaceholder\"\n    class=\"msg-list fg-1 main-container flex column\"\n  >\n    <msg\n      *ngFor=\"let msg of chat.msgs; index as idx\"\n      trackBy=\"trackByFn\"\n      [msg]=\"msg\"\n    ></msg>\n  </div>\n  <ng-template #msgsPlaceholder>\n    <main class=\"msgs-placeholder main-container\">No msgs in this chat</main>\n  </ng-template>\n  <send-msg-bar [chat]=\"chat\"></send-msg-bar>\n</section>\n<ng-template #chatPlaceholder>\n  <main class=\"chat-placeholder main-container\">Loading...</main>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable, Subscription } from 'rxjs';\nimport { ChatService } from '../../services/chat.service';\nimport { Chat } from '../../models/chat';\nimport { NgEventBus } from 'ng-event-bus';\n\n@Component({\n  selector: 'chat-details',\n  templateUrl: './chat-details.component.html',\n  styleUrls: ['./chat-details.component.scss'],\n})\nexport class ChatDetailsComponent implements OnInit {\n  constructor(\n    private chatService: ChatService,\n    private route: ActivatedRoute,\n    private eventBus: NgEventBus\n  ) {}\n\n  subscription: Subscription;\n  chatId: string | null;\n  chat: any;\n\n  ngOnInit(): void {\n    // load the relevant chat...\n    this.subscription = this.route.params.subscribe(({ chatId }) => {\n      console.log('chatId:', chatId);\n      this.chatId = chatId;\n    });\n\n    //subscribe to get updates...\n    this.chatService.chats$.subscribe((currChats) => {\n      this.chat = currChats.find(\n        (currChat: Chat) => currChat._id === this.chatId\n      );\n    });\n    this.eventBus.cast('notif', 'hello from chat details!!!');\n  }\n\n  get usersList() {\n    if (!this.chat) return [];\n    const res = this.chat.participations.map((currPrt: any) => {\n      return `@${currPrt.username}`;\n    });\n    return res.join(', ');\n  }\n\n  trackByFn(idx: number, chat: Chat) {\n    return chat._id;\n  }\n}\n","<div class=\"send-msg-bar\">\n  <div class=\"main-container flex align-center\">\n    <form hidden (submit)=\"onSendMsg()\" id=\"msgForm\"></form>\n    <input\n      class=\"fg-1\"\n      type=\"text\"\n      name=\"txt\"\n      placeholder=\"Type here...\"\n      [(ngModel)]=\"txt\"\n      form=\"msgForm\"\n    />\n    <circle-button class=\"send-button\" (click)=\"onSendMsg()\">\n      <svg\n        *ngIf=\"!isLoading; else loading\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        width=\"24\"\n        height=\"24\"\n      >\n        <path\n          fill=\"red\"\n          d=\"M1.101 21.757L23.8 12.028 1.101 2.3l.011 7.912 13.623 1.816-13.623 1.817-.011 7.912z\"\n        ></path>\n      </svg>\n      <ng-template #loading>\n        <loading></loading>\n      </ng-template>\n    </circle-button>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Chat } from 'src/app/models/chat';\nimport { ChatService } from 'src/app/services/chat.service';\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'send-msg-bar',\n  templateUrl: './send-msg-bar.component.html',\n  styleUrls: ['./send-msg-bar.component.scss'],\n})\nexport class SendMsgBarComponent implements OnInit {\n  @Input() chat: Chat;\n  constructor(\n    private userService: UserService,\n    private chatService: ChatService\n  ) {}\n\n  loggedInUser: any = null;\n  txt: string;\n  isLoading: boolean = false;\n\n  ngOnInit(): void {\n    this.userService.loggedInUser$.subscribe(\n      (currUser) => (this.loggedInUser = currUser)\n    );\n  }\n\n  async onSendMsg() {\n    this.isLoading = true;\n    const { _id, username, profileImgUrl } = this.loggedInUser;\n    const msg = {\n      from: { _id, username, profileImgUrl },\n      txt: this.txt,\n      createdAt: Date.now(),\n    };\n    try {\n      await this.chatService.addMsg(this.chat._id, msg);\n    } catch (err) {\n      //\n    } finally {\n      this.isLoading = false;\n    }\n  }\n}\n","<section class=\"chat-add flex column\">\n  <form (submit)=\"onAddChat()\">\n    <div class=\"chat-config flex align-center main-box\">\n      <profile-img [imgUrl]=\"imgUrl\"></profile-img>\n      <mat-form-field class=\"example-full-width fg-1\">\n        <input\n          matInput\n          name=\"name\"\n          [(ngModel)]=\"name\"\n          placeholder=\"Room name...\"\n          required\n        />\n      </mat-form-field>\n      <button mat-raised-button color=\"primary\">Start Chat!</button>\n    </div>\n    <div class=\"participations flex column\">\n      <h4 class=\"main-box\">Participations:</h4>\n      <participation-preview\n        *ngFor=\"let participation of participations; index as idx\"\n        trackBy=\"trackByFn\"\n        [user]=\"participation\"\n        (removeParticipation)=\"onRemoveParticipation($event)\"\n      ></participation-preview>\n    </div>\n    <h4 class=\"main-box\">Choose:</h4>\n    <user-list\n      [users]=\"usersToShow\"\n      (addParticipation)=\"onAddParticipation($event)\"\n    ></user-list>\n  </form>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { Msg } from 'src/app/models/chat';\nimport { User } from 'src/app/models/user';\nimport { ChatService } from 'src/app/services/chat.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { NotifierService } from 'angular-notifier';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-chat-add',\n  templateUrl: './chat-add.component.html',\n  styleUrls: ['./chat-add.component.scss'],\n})\nexport class ChatAddComponent implements OnInit {\n  constructor(\n    private userService: UserService,\n    private chatService: ChatService,\n    private notifierService: NotifierService,\n    private router: Router\n  ) {}\n\n  loggedInUser: any;\n  users: User[] = [];\n  get usersToShow() {\n    return this.users.filter((currUser) => {\n      return (\n        currUser._id !== this.loggedInUser?._id &&\n        !this.participationsIds.includes(currUser._id)\n      );\n    });\n  }\n  name: string = '';\n  participationsIds: string[] = [];\n  imgUrl: string =\n    'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT0Ic-6gUea7KhPvJHPMP-Z9wFrT7qiVlTmCQ&usqp=CAU';\n\n  get participations() {\n    return this.participationsIds.map((currId) => {\n      const { _id, username, profileImgUrl } = this.users.find(\n        (currUser) => currUser._id === currId\n      );\n      return {\n        _id,\n        username,\n        profileImgUrl,\n      };\n    });\n  }\n\n  onAddParticipation(newPrtId: any) {\n    this.participationsIds = [...this.participationsIds, newPrtId];\n  }\n  onRemoveParticipation(PrtId: any) {\n    this.participationsIds = this.participationsIds.filter(\n      (currPrt) => currPrt !== PrtId\n    );\n  }\n  changeName(newVal: string) {\n    this.name = newVal;\n  }\n  changeImgUrl(newVal: string) {\n    this.imgUrl = newVal;\n  }\n\n  async onAddChat() {\n    //validation...\n    if (!this.participations?.length) {\n      this.notifierService.notify(\n        'error',\n        'You need to add at least one member'\n      );\n      return;\n    }\n\n    const newChat = {\n      msgs: [] as Msg[],\n      name: this.name,\n      participations: [\n        {\n          _id: this.loggedInUser._id,\n          username: this.loggedInUser.username,\n          profileImgUrl: this.loggedInUser.profileImgUrl,\n        },\n        ...this.participations,\n      ],\n      imgUrl: this.imgUrl,\n    };\n    try {\n      const chatId = await this.chatService.addChat(newChat);\n      this.notifierService.notify('success', 'Added chat');\n      this.router.navigateByUrl(`/chat/${chatId}`);\n    } catch (err) {\n      this.notifierService.notify(\n        'error',\n        'Error while trying to add chat in server'\n      );\n    }\n  }\n\n  ngOnInit(): void {\n    this.userService.loggedInUser$.subscribe((currUser) => {\n      this.loggedInUser = currUser;\n    });\n\n    this.userService.users$.subscribe((currUsers) => {\n      this.users = currUsers;\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.scss'],\n})\nexport class LoadingComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"loading-container center-childs\">\n  <img\n    class=\"loading\"\n    src=\"../../../../assets/img/loading.svg\"\n    alt=\"Loading...\"\n  />\n</div>\n","import { Injectable, isDevMode } from '@angular/core';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../models/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  constructor(private http: HttpClient) {\n    this.loadUsers();\n  }\n  //dev:\n  // baseUrl = '//localhost:3030/api/';\n  //prod:\n  baseUrl = '/api/';\n\n  initloggedInUSer: User = JSON.parse(\n    sessionStorage.getItem('loggedInUser') || 'null'\n  );\n\n  private _loggedInUser$ = new BehaviorSubject<User | null>(\n    this.initloggedInUSer\n  );\n  public loggedInUser$ = this._loggedInUser$.asObservable();\n  private _users$ = new BehaviorSubject<User[]>([]);\n  public users$ = this._users$.asObservable();\n\n  public async login(username: string, password: string) {\n    try {\n      const loggedInUser: any = await this.http\n        .post(\n          `${this.baseUrl}auth/login`,\n          {\n            username,\n            password,\n          },\n          { withCredentials: true }\n        )\n        .toPromise();\n      this._loggedInUser$.next(loggedInUser);\n      sessionStorage.setItem('loggedInUser', JSON.stringify(loggedInUser));\n      return loggedInUser;\n    } catch (err) {\n      console.log('error while trying log in...', err);\n      throw err;\n    }\n  }\n\n  public async signup(details: any) {\n    try {\n      const loggedInUser: any = await this.http\n        .post(`${this.baseUrl}auth/signup`, details, { withCredentials: true })\n        .toPromise();\n      this._loggedInUser$.next(loggedInUser);\n      sessionStorage.setItem('loggedInUser', JSON.stringify(loggedInUser));\n      return loggedInUser;\n    } catch (err) {\n      console.log('error while trying signup...', err);\n      throw err;\n    }\n  }\n\n  public async logout() {\n    try {\n      await this.http\n        .post(`${this.baseUrl}auth/logout`, {}, { withCredentials: true })\n        .toPromise();\n      this._loggedInUser$.next(null);\n      sessionStorage.setItem('loggedInUser', JSON.stringify(''));\n      return;\n    } catch (err) {\n      console.log('error while trying log in...', err);\n      throw err;\n    }\n  }\n\n  public async loadUsers() {\n    try {\n      const users: any = await this.http\n        .get(`${this.baseUrl}user`, { withCredentials: true })\n        .toPromise();\n      this._users$.next(users);\n      return this.users$;\n    } catch (err) {\n      console.log('error while trying fetch users...', err);\n      throw err;\n    }\n  }\n}\n","import { Injectable, isDevMode } from '@angular/core';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Chat } from '../models/chat';\nimport { UtilService } from './util.service';\nimport { NotifierService } from 'angular-notifier';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ChatService {\n  constructor(\n    private http: HttpClient,\n    private utilService: UtilService,\n    private notifierService: NotifierService\n  ) {\n    this.chats$.subscribe((currChats) => (this.chats = currChats));\n  }\n  //dev:\n  // baseUrl = '//localhost:3030/api/';\n  //prod:\n  baseUrl = '/api/';\n  chats: Chat[];\n\n  private _chats$ = new BehaviorSubject(null);\n  public chats$ = this._chats$.asObservable();\n\n  public addToObservableArray(chat: Chat) {\n    if (this.chats.find((currChat) => currChat._id === chat._id)) {\n      return;\n    }\n    this._chats$.next([...this.chats, chat]);\n  }\n\n  public removeFromObservableArray(chatId: string) {\n    const updatedChats = this.chats.filter(\n      (currChat) => currChat._id !== chatId\n    );\n    this._chats$.next(updatedChats);\n  }\n\n  public updateInObservableArray(chat: Chat) {\n    const chatIdx = this.chats.findIndex(\n      (currChat) => currChat._id === chat._id\n    );\n    if (chatIdx < 0) return;\n    const updatedChats = JSON.parse(JSON.stringify(this.chats));\n    updatedChats.splice(chatIdx, 1, chat);\n    this._chats$.next(updatedChats);\n  }\n\n  public handleExternalUpdate(socketEv: any) {\n    if (socketEv.type === 'chat-add') {\n      //chat-add scanerio...\n      console.log('handeling chat-add update... ', socketEv);\n      this.addToObservableArray(socketEv.chat);\n      this.notifierService.notify(\n        'success',\n        `You have been added to room #${socketEv.chat.name}`\n      );\n    } else if (socketEv.type === 'chat-remove') {\n      //chat-remove scanerio\n      console.log('handeling chat-remove update... ', socketEv);\n      this.removeFromObservableArray(socketEv.chatId);\n      //notif\n    } else if (socketEv.type === 'chat-add-msg') {\n      //chat-add-msg scanrio\n      console.log('handeling chat-add-msg update... ', socketEv);\n      this.updateInObservableArray(socketEv.chat);\n      const { chat } = socketEv;\n      const msg = chat.msgs[chat.msgs.length - 1];\n      this.notifierService.notify(\n        'success',\n        `#${chat.name} - ${msg.from.username}: ${msg.txt}`\n      );\n    }\n  }\n\n  public async loadChats() {\n    try {\n      const chats: any = await this.http\n        .get(`${this.baseUrl}chat`, { withCredentials: true })\n        .toPromise();\n      this._chats$.next(chats);\n      return this.chats$;\n    } catch (err) {\n      console.log('error while trying fetch chats...', err);\n      throw err;\n    }\n  }\n\n  public async addChat(newChat: any) {\n    try {\n      const updatedChat: any = await this.http\n        .post(`${this.baseUrl}chat`, newChat, {\n          withCredentials: true,\n        })\n        .toPromise();\n\n      this.addToObservableArray(updatedChat);\n      return updatedChat._id;\n    } catch (err) {\n      console.log('error while trying to add chat...', err);\n      throw err;\n    }\n  }\n  public async addMsg(chatId: string, msg: any) {\n    try {\n      msg.id = this.utilService.makeId();\n      const updatedMsg: any = await this.http\n        .post(`${this.baseUrl}chat/${chatId}/msg`, msg, {\n          withCredentials: true,\n        })\n        .toPromise();\n\n      // const lastChat = JSON.parse(JSON.stringify(this.chat));\n      const lastChat = JSON.parse(\n        JSON.stringify(this.chats.find((currChat) => currChat._id === chatId))\n      );\n      lastChat.msgs = [...lastChat.msgs, updatedMsg];\n      const lastChats: Chat[] = JSON.parse(JSON.stringify(this.chats));\n      const chatIdx = lastChats.findIndex(\n        (currChat) => currChat._id === chatId\n      );\n      lastChats.splice(chatIdx, 1, lastChat);\n      this._chats$.next(lastChats);\n      return this.chats$;\n    } catch (err) {\n      console.log('error while trying fetch chat...', err);\n      throw err;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthComponent } from './pages/auth/auth.component';\nimport { ChatComponent } from './pages/chat/chat.component';\nimport { ChatAddComponent } from './pages/chat-add/chat-add.component';\nimport { AuthGuard } from './gurads/auth.guard';\nimport { ChatDetailsComponent } from './pages/chat-details/chat-details.component';\n\nconst routes: Routes = [\n  { path: 'auth', component: AuthComponent, canActivate: [AuthGuard] },\n  {\n    path: 'chat/add',\n    component: ChatAddComponent,\n    pathMatch: 'full',\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'chat/:chatId',\n    component: ChatDetailsComponent,\n    pathMatch: 'full',\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'chat',\n    component: ChatComponent,\n    pathMatch: 'full',\n    canActivate: [AuthGuard],\n  },\n  { path: '', redirectTo: '/chat', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Msg } from 'src/app/models/chat';\nimport { User } from 'src/app/models/user';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'msg',\n  templateUrl: './msg.component.html',\n  styleUrls: ['./msg.component.scss'],\n})\nexport class MsgComponent implements OnInit {\n  @Input() msg: Msg;\n  loggedInUser: User;\n  constructor(private userSerivce: UserService) {}\n\n  get selfMsgClass() {\n    const isSelf = this.msg.from._id === this.loggedInUser._id;\n    return isSelf ? 'self' : '';\n  }\n\n  ngOnInit(): void {\n    this.userSerivce.loggedInUser$.subscribe((currUser) => {\n      this.loggedInUser = currUser;\n    });\n  }\n}\n","<article class=\"msg-container {{ selfMsgClass }}\">\n  <article class=\"msg flex column\">\n    <div class=\"msg-header flex align-center\">\n      <strong>{{ msg.from.username }}</strong>\n    </div>\n    <div class=\"msg-body flex align-center\">\n      <p class=\"msg-txt\">{{ msg.txt }}</p>\n      <p>{{ msg.createdAt | date: \"short\" }}</p>\n    </div>\n  </article>\n  <div class=\"msg-tip\"></div>\n</article>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}